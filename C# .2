이번엔 조건문과 반복문에 대해 알아보겠다.

(다른 프로그래밍 언어를 이미 알고 있는 사람은 구분선 위쪽만 봐도 별로 상관없을것 같다)

사실 이것들은 C를 조금이라도 알고 있다면 (처음부터 하는 C# 이 아니라 C부터 하는 C#)

거의 똑같기 때문에 쉽게 넘어갈수 있다. 예를 들면 C#에서도

/***
if ()
{
}
else if () 
{
}
else
{
}
***/
가 모두 똑같이 적용이 되고 반복문도

/***
while (true)
{
}
do
{
}while (true);

for (int i = 0; i < n; i++)
{
}
***/
가 똑같이 적용되기 때문이다.

​

뭐 몇가지 다른것은 
/***
if (1)
{
}
while (1)
{
}
***/
같은 숫자형 bool이 안된다는 이런게 있다.

----------------------------

그러면 다시 처음으로 돌아와서 조건문부터 차근차근 나아가보도록 하겠다.
조건문부터 차근차근 나아가보도록 하겠다.

먼저 조건문은 쉴게 말해 질문을 하는 명령어이다.

예시를 보여주자면
/***
int a = 10;
if(a == 10) 
//부호를 모르는 사람이 있을 까봐 말해주자면 언어에서 = 은 예를 들면 a = 10 이라 쳤을 때
//a가 10이란 뜻이 아니라 a에 10을 넣는다는 부호이다. 그리고 == 이 우리가 아는 = 이라 할 수 있다
{
    Console.WriteLine("10");
}
***/
이라면 말 그대로 괄호 안에 있는 조건을 통해 a 가 10인가? 를 판단하는 것이고

지금 상황에서는 a가 10이 맞기 때문에 조건문 안에 있는 Console.WriteLine("10");이 실행될 것이다.

​

그리고 또 다른 예시를 보여주자면
/***
int a = 1;
if (a == 10)
{
    Console.WriteLine("10");
}
else if (a == 5) 
{
    Console.WriteLine("5");
}
else
{
    Console.WriteLine("X");
}
***/
이라면 X가 출력될 것이다.

else if는 if문 뒤에 들어가 if의 조건문이 거짓일 경우에 발동이 되는 명령어이다.

하지만 위 코드에서 보면 else if의 조건문이 a가 5인가? 또한 거짓이기에

발동이 되지 않는데 그 밑에 보면 else라는 명령어가 있다. 

이 명령어는 if문과 else if문 뒤에 들어가며 전부 거짓일때 발동이 되는 그런 명령어라고 할수 있다.

​

그 다음은 반복문을 보도록 하겠다.

반복문은 그 조건에 맞는 만큼 그 문항을 반복하는 것이다.

먼저 while문 부터 보자면
/***
int a = 10;
whlie (a > 0) 
{
    a = a - 1;
    Console.WriteLine(a);
}
***/
이라면 10 9 8 7 6 5 4 3 2 1 이 될것이다.

while은 조건문과 상당히 비슷한데 관호 안에 조건이 맞다면 끊임없이 반복을 하게 된다.

그래서 위에 코드를 보면 출력문 외에 a를 1씩 줄이는 코드를 써 

저 조건의 범위를 벗어나게 만들었는데 

만약 이런식으로 제한을 두지 않을 경우 반복문이 끝없이 반복하여 

그 뒤에 있는 문항이 실행되지 않을수도 있다.

그렇기에 제한을 두는것이 중요한데 그걸 하기 어려울 시엔 Break; 라는 반복문을 탈출하는 명령어가 있다.

이 명령어를 반복문 안에 넣으면 탈출이 가능하며 이것은 for문에서도 적용이 가능하다.

​

다음은 for문이다. for문은
/***
int a = 10;
for (int i = 0; i < a; i++)
{
    Console.WriteLine(i);
}
***/
처럼 쓸수 있는데 이걸 실행시 0 1 2 3 4 5 6 7 8 9가 나온다.

for문은 처름 봤을땐 복잡해 보일수 있어도 배우고 나면 쉽다.

먼저 for문의 조건을 보면 int i = 0; i < a; i++ 이라 되어있는데 세미콜론을 기준으로 떼어서 보면

int i = 0;은 for문 안에 지역변수를 선언하는 것으로 볼수 있듯이 0에서 시작하는것을 알수 있다.

그 다음으로 i < a;는 i가 a보다 작을시에만 반복을 계속 한다는 것을 알수 있다.

이곳을 while문의 조건과 비슷하게 적으면 된다.

마지막으로 i++인데 이것은 i를 한번 반복할때마다 1씩 증가시킨다는 뜻으로 

++ 이 +1 이라고 생각하면 된다.
